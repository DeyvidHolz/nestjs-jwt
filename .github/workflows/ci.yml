name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.13.1
      - name: Fetch dependencies from cache
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
      - name: Build Application
        run: yarn build
  test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
    services:
      postgres:
        image: postgres:13.2-alpine
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.13.1
      - name: Fetch dependencies from cache
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
      - name: Lint files
        run: yarn lint
      - name: Unit tests
        run: yarn test
      - name: E2E tests
        run: yarn test:e2e
